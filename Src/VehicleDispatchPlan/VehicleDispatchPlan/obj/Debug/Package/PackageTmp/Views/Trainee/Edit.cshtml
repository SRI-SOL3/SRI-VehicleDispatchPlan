@model VehicleDispatchPlan.Models.V_TraineeEdt
@using VehicleDispatchPlan.Constants;

@{
    ViewBag.Title = "更新";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Edit", "Trainee", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>教習生情報</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
            Html.EnableClientValidation(false);
        }
        @Html.HiddenFor(model => model.Trainee.TraineeId)
        @Html.HiddenFor(model => model.Trainee.GroupId)

        <div class="form-group">
            @{
                @* 編集モードによりボタンの表示を設定 *@
                if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                {
                    <input type="submit" name="cmd" value="@AppConstant.CMD_CONFIRM" class="btn btn-default" style="margin-left:10px;" />
                }
                else
                {
                    <input type="submit" name="cmd" value="@AppConstant.CMD_RETURN" class="btn btn-default" style="margin-left:10px;" />
                    <input type="submit" name="cmd" value="@AppConstant.CMD_UPDATE" class="btn btn-default" style="margin-left:10px;" />
                }
            }
        </div>

        @* エラーメッセージ *@
        <div style="color: Red">@ViewBag.ErrorMessage</div>

        <hr />

        @* 教習者名 *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.TraineeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.EditorFor(model => model.Trainee.TraineeName, new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.TraineeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    }
                }
            </div>
        </div>

        @* 通学種別 *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.AttendTypeCd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.DropDownListFor(model => model.Trainee.AttendTypeCd, Model.Trainee.SelectAttendType, "選択してください", new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.AttendType.AttendTypeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.Trainee.AttendTypeCd)
                    }
                }
            </div>
        </div>

        @* 教習コース *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.TrainingCourseCd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.DropDownListFor(model => model.Trainee.TrainingCourseCd, Model.Trainee.SelectTrainingCourse, "選択してください", new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.TrainingCourse.TrainingCourseName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.Trainee.TrainingCourseCd)
                    }
                }
            </div>
        </div>

        @* 入校予定日 *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.EntrancePlanDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div style="display: flex;">
                    @{
                        @* 編集モードによりreadonlyの有無を設定 *@
                        if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                        {
                            @Html.EditorFor(model => model.Trainee.EntrancePlanDate, new { htmlAttributes = new { @class = "form-control" } })
                            <input type="submit" name="cmd" value="@AppConstant.CMD_SET_TMP_GRD" class="btn btn-default" style="margin-left: 10px;" />
                            <div style="margin-left:5px; height:auto; vertical-align:text-bottom;">
                                <span style="position:absolute; bottom:0; font-size:12px;">入卒カレンダーから仮免予定日・卒業予定日を設定します。</span>
                            </div>
                        }
                        else
                        {
                            @Html.EditorFor(model => model.Trainee.EntrancePlanDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        }
                    }
                </div>
            </div>
        </div>

        @* 仮免予定日 *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.TmpLicencePlanDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.EditorFor(model => model.Trainee.TmpLicencePlanDate, new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.TmpLicencePlanDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    }
                }
            </div>
        </div>

        @* 卒業予定日 *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.GraduatePlanDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.EditorFor(model => model.Trainee.GraduatePlanDate, new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.GraduatePlanDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    }
                }
            </div>
        </div>

        @* 宿泊施設 *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.LodgingCd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.DropDownListFor(model => model.Trainee.LodgingCd, Model.Trainee.SelectLodging, "選択してください", new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.LodgingFacility.LodgingName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.Trainee.LodgingCd)
                    }
                }
            </div>
        </div>

        @* エージェント *@
        <div class="form-group">
            @Html.LabelFor(model => model.Trainee.AgentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    @* 編集モードによりreadonlyの有無を設定 *@
                    if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
                    {
                        @Html.EditorFor(model => model.Trainee.AgentName, new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Trainee.AgentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    }
                }
            </div>
        </div>

        @{
            if (Model.ChartData != null)
            {
                // 表
                @Html.Partial("../Shared/Table", Model.ChartData)
            }
        }

    </div>
}

<div>
    @{
        @* 編集モードにより一覧リンクの表示有無を設定 *@
        if (AppConstant.EditMode.Edit.Equals(Model.EditMode))
        {
            @Html.ActionLink("一覧", "List")
        }
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model VehicleDispatchPlan.Models.V_Forecast
@using VehicleDispatchPlan.Models;

@{
    ViewBag.Title = "受入予測管理";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(null, null, FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        対象年月:
        @* 年From *@
        <div class="form-group" style="margin-left:10px;">
            @Html.DropDownList("YearFrom", (IEnumerable<SelectListItem>)ViewBag.SelectYear, "年", new { htmlAttributes = new { @class = "form-control" }, onchange = "disableUpdate()" })
        </div>
        @* 月From *@
        <div class="form-group" style="margin-left:20px;">
            @Html.DropDownList("MonthFrom", new SelectListItem[]{
                    new SelectListItem() { Value="1", Text="1" },
                    new SelectListItem() { Value="2", Text="2" },
                    new SelectListItem() { Value="3", Text="3" },
                    new SelectListItem() { Value="4", Text="4" },
                    new SelectListItem() { Value="5", Text="5" },
                    new SelectListItem() { Value="6", Text="6" },
                    new SelectListItem() { Value="7", Text="7" },
                    new SelectListItem() { Value="8", Text="8" },
                    new SelectListItem() { Value="9", Text="9" },
                    new SelectListItem() { Value="10", Text="10" },
                    new SelectListItem() { Value="11", Text="11" },
                    new SelectListItem() { Value="12", Text="12" }
                }, "月", new { htmlAttributes = new { @class = "form-control" }, onchange = "disableUpdate()" })
        </div>
        <div class="form-group" style="margin-left:20px;">～</div>
        @* 年To *@
        <div class="form-group" style="margin-left:20px;">
            @Html.DropDownList("YearTo", (IEnumerable<SelectListItem>)ViewBag.SelectYear, "年", new { htmlAttributes = new { @class = "form-control" }, onchange = "disableUpdate()" })
        </div>
        @* 月To *@
        <div class="form-group" style="margin-left:20px;">
            @Html.DropDownList("MonthTo", new SelectListItem[]{
                    new SelectListItem() { Value="1", Text="1" },
                    new SelectListItem() { Value="2", Text="2" },
                    new SelectListItem() { Value="3", Text="3" },
                    new SelectListItem() { Value="4", Text="4" },
                    new SelectListItem() { Value="5", Text="5" },
                    new SelectListItem() { Value="6", Text="6" },
                    new SelectListItem() { Value="7", Text="7" },
                    new SelectListItem() { Value="8", Text="8" },
                    new SelectListItem() { Value="9", Text="9" },
                    new SelectListItem() { Value="10", Text="10" },
                    new SelectListItem() { Value="11", Text="11" },
                    new SelectListItem() { Value="12", Text="12" }
                }, "月", new { htmlAttributes = new { @class = "form-control" }, onchange = "disableUpdate()" })
        </div>

        @* 検索ボタン *@
        <div class="form-group" style="margin-left:30px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="cmd" value="検索" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />
@using (Html.BeginForm(null, null, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal">
        <div style="display: flex;">
            @{
                for (int i = 0; i < Model.Forecast.Count(); i++)
                {
                    <div style="min-width:300px;">
                        @{
                                <font size="4">
                                    @Html.Label((string.IsNullOrEmpty(Model.Forecast[i].Year) ? " - " : Model.Forecast[i].Year) + "年"
                                       + (string.IsNullOrEmpty(Model.Forecast[i].Month) ? " - " : Model.Forecast[i].Month) + "月"
                                       , htmlAttributes: new { @style = "" })
                                </font>

                            @* 学科総時限数/月 *@
                            <div class="form-group" style="display: flex;">
                                @{
                                    if (i == 0)
                                    {
                                        @Html.LabelFor(model => model.Forecast[i].LectureClassQty, htmlAttributes: new { @class = "control-label col-md-2", @style="width:200px;" })
                                    }
                                }
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Forecast[i].LectureClassQty, new { htmlAttributes = new { @class = "form-control", @style="width:100px;" } })
                                    @Html.ValidationMessageFor(model => model.Forecast[i].LectureClassQty, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @* 合宿比率 *@
                            <div class="form-group" style="display: flex;">
                                @{
                                    if (i == 0)
                                    {
                                        @Html.LabelFor(model => model.Forecast[i].LodgingRatio, htmlAttributes: new { @class = "control-label col-md-2", @style="width:200px;" })
                                    }
                                }
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Forecast[i].LodgingRatio, new { htmlAttributes = new { @class = "form-control", @style="width:100px;" } })
                                    @Html.ValidationMessageFor(model => model.Forecast[i].LodgingRatio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @* MT比率 *@
                            <div class="form-group" style="display: flex;">
                                @{
                                    if (i == 0)
                                    {
                                        @Html.LabelFor(model => model.Forecast[i].MtRatio, htmlAttributes: new { @class = "control-label col-md-2", @style="width:200px;" })
                                    }
                                }
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Forecast[i].MtRatio, new { htmlAttributes = new { @class = "form-control", @style="width:100px;" } })
                                    @Html.ValidationMessageFor(model => model.Forecast[i].MtRatio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @* 勤務属性別 *@
                            if (Model.WorkType != null)
                            {
                                for (int j = 0; j < Model.ForecastByWork.Count(); j++)
                                {
                                    <hr />

                                    if (Model.Forecast[i].Year.Equals(Model.ForecastByWork[j].Year) && Model.Forecast[i].Month.Equals(Model.ForecastByWork[j].Month))
                                    {
                                        @* 年(hidden) *@
                                        @Html.HiddenFor(modelItem => Model.ForecastByWork[j].Year)
                                        @* 月(hidden) *@
                                        @Html.HiddenFor(modelItem => Model.ForecastByWork[j].Month)
                                        @* 勤務属性コード(hidden) *@
                                        @Html.HiddenFor(modelItem => Model.ForecastByWork[j].WorkTypeCd)

                                        for (int k = 0; k < Model.WorkType.Count(); k++)
                                        {
                                            if (Model.ForecastByWork[j].WorkTypeCd.Equals(Model.WorkType[k].WorkTypeCd))
                                            {
                                                @* 勤務属性コード(hidden) *@
                                                @Html.HiddenFor(modelItem => Model.WorkType[k].WorkTypeCd)
                                                @* 勤務属性名(hidden) *@
                                                @Html.HiddenFor(modelItem => Model.WorkType[k].WorkTypeName)
                                                @* 勤務属性名 *@
                                                <font size="3">
                                                    @Html.Label(Model.WorkType[k].WorkTypeName, htmlAttributes: new { @style = "" })
                                                </font>
                                            }
                                        }

                                        @* 時限数/日 *@
                                        <div class="form-group">
                                            @Html.LabelFor(modelItem => Model.ForecastByWork[j].ClassQty, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(modelItem => Model.ForecastByWork[j].ClassQty, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        @* 指導員数/日 *@
                                        <div class="form-group">
                                            @Html.LabelFor(modelItem => Model.ForecastByWork[j].InstructorAmt, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(modelItem => Model.ForecastByWork[j].InstructorAmt, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        @* 出勤日数/月 *@
                                        <div class="form-group">
                                            @Html.LabelFor(modelItem => Model.ForecastByWork[j].WorkDays, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(modelItem => Model.ForecastByWork[j].WorkDays, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        @* 教習外業務比率 *@
                                        <div class="form-group">
                                            @Html.LabelFor(modelItem => Model.ForecastByWork[j].NotDrivingRatio, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(modelItem => Model.ForecastByWork[j].NotDrivingRatio, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        }
                    </div>
                }
            }
        </div>

        @* 更新ボタン *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @{
                    if (Model.DisableUpdate == true)
                    {
                        // 年と月がどちらも設定されている場合、活性化
                        <input type="submit" id="update" name="cmd" value="更新" class="btn btn-default" disabled="disabled" />
                    }
                    else
                    {
                        // 年と月がどちらかが空の場合、非活性化
                        <input type="submit" id="update" name="cmd" value="更新" class="btn btn-default" />
                    }
                }
            </div>
        </div>

        @{
            if (Model.ChartData != null)
            {
                @* 表 *@
                <div class="row" style="overflow: auto; margin-top: 30px;">
                    <table border="1" style="table-layout: fixed; width: 100%;">
                        <thead>
                            <tr>
                                <th width="150" colspan="3" style="text-align: center;">日付</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <th width="40" style="text-align: center;">@item.Date.ToString("M/d")</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <th rowspan="3" style="text-align: center;">受入残</th>
                                <th colspan="2" style="text-align: center;">総数</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.AcceptTotalRemAmt</td>
                                }
                            </tr>
                            <tr>
                                <th colspan="2" style="text-align: center;">合宿</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.AcceptLodgingRemAmt</td>
                                }
                            </tr>
                            <tr>
                                <th colspan="2" style="text-align: center;">通学</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.AcceptCommutingRemAmt</td>
                                }
                            </tr>
                            <tr>
                                <th rowspan="7" style="text-align: center;">在籍</th>
                                <th colspan="2" style="text-align: center;">総数</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.TotalRegAmt</td>
                                }
                            </tr>
                            <tr>
                                <th rowspan="4" style="text-align: center;">合宿</th>
                                <th style="text-align: center;">MT-1</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.LodgingMtFstRegAmt</td>
                                }
                            </tr>
                            <tr>
                                <th style="text-align: center;">MT-2</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.LodgingMtSndRegAmt</td>
                                }
                            </tr>
                            <tr>
                                <th style="text-align: center;">AT-1</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.LodgingAtFstRegAmt</td>
                                }
                            </tr>
                            <tr>
                                <th style="text-align: center;">AT-2</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.LodgingAtSndRegAmt</td>
                                }
                            </tr>
                            <tr>
                                <th rowspan="2" style="text-align: center;">通学</th>
                                <th style="text-align: center;">MT</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.CommutingMtRegAmt</td>
                                }
                            </tr>
                            <tr>
                                <th style="text-align: center;">AT</th>
                                @foreach (V_ChartData item in Model.ChartData)
                                {
                                    <td style="text-align: center;">@item.CommutingAtRegAmt</td>
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>

                @* チェックボックス *@
                <div class="row" style="margin-top:30px; display: flex;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChartTotalRem, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:120px;" })
                        <div class="col-md-10" ">
                            @Html.CheckBoxFor(model => model.ChartTotalRem, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChartLodgingRem, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:120px;" })
                        <div class="col-md-10" ">
                            @Html.CheckBoxFor(model => model.ChartLodgingRem, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChartCommutingRem, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:120px;" })
                        <div class="col-md-10" ">
                            @Html.CheckBoxFor(model => model.ChartCommutingRem, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChartTotalReg, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:120px;" })
                        <div class="col-md-10" ">
                            @Html.CheckBoxFor(model => model.ChartTotalReg, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChartLodgingReg, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:120px;" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.ChartLodgingReg, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChartCommutingReg, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:120px;" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.ChartCommutingReg, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <input type="hidden" id="scroll" name="scroll_top" value="">
                    <input type="submit" id="chart" name="cmd" value="再表示" class="btn btn-default" style="margin-left:30px;" />
                </div>

                @* グラフ *@
                <div class="row" style="overflow: auto;">
                    <img src="@ViewBag.ChartPath" />
                </div>
            }
        }

    </div>
}

<script>
    @* 更新ボタンを非活性化 *@
    function disableUpdate() {
        document.getElementById("update").disabled = true;
    }

    //function selectPosition() {
    //    var iSelectPosition = document.getElementById('scroll').value;
    //    document.getElementById('chart').scrollTop = iSelectPosition;
    //}


    //function ClickSubmitBtn() {
    //    document.getElementById('scroll').value = document.getElementById('chart').scrollTop;
    //}
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

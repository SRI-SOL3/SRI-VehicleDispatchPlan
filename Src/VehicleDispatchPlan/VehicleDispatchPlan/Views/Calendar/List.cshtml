@model VehicleDispatchPlan.Models.V_EntGrdCalendarEdt
@using VehicleDispatchPlan.Constants;

@{
    ViewBag.Title = "入卒カレンダー";
}

<h2>@ViewBag.Title</h2>

<p style="font-size:16px;">
    @Html.ActionLink("CSVからインポート", "Import")
</p>

@using (Html.BeginForm("List", "Calendar", FormMethod.Get))
{
    <div class="form-inline">
        入校年月:
        @* 年 *@
        <div class="form-group" style="margin-left:10px;">
            @{ int nowYear = DateTime.Now.Year; }
            @Html.DropDownListFor(model => Model.Year, new SelectListItem[] {
                    new SelectListItem() { Text = (nowYear - 5).ToString(), Value=(nowYear - 5).ToString() },
                    new SelectListItem() { Text = (nowYear - 4).ToString(), Value=(nowYear - 4).ToString() },
                    new SelectListItem() { Text = (nowYear - 3).ToString(), Value=(nowYear - 3).ToString() },
                    new SelectListItem() { Text = (nowYear - 2).ToString(), Value=(nowYear - 2).ToString() },
                    new SelectListItem() { Text = (nowYear - 1).ToString(), Value=(nowYear - 1).ToString() },
                    new SelectListItem() { Text = nowYear.ToString(), Value=nowYear.ToString() },
                    new SelectListItem() { Text = (nowYear + 1).ToString(), Value=(nowYear + 1).ToString() },
                    new SelectListItem() { Text = (nowYear + 2).ToString(), Value=(nowYear + 2).ToString() },
                    new SelectListItem() { Text = (nowYear + 3).ToString(), Value=(nowYear + 3).ToString() },
                    new SelectListItem() { Text = (nowYear + 4).ToString(), Value=(nowYear + 4).ToString() },
                    new SelectListItem() { Text = (nowYear + 5).ToString(), Value=(nowYear + 5).ToString() }
                }, "対象年", new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @* 月 *@
        <div class="form-group" style="margin-left:10px;">
            @Html.DropDownListFor(model => Model.Month, new SelectListItem[]{
                    new SelectListItem() { Text="1", Value="1" },
                    new SelectListItem() { Text="2", Value="2" },
                    new SelectListItem() { Text="3", Value="3" },
                    new SelectListItem() { Text="4", Value="4" },
                    new SelectListItem() { Text="5", Value="5" },
                    new SelectListItem() { Text="6", Value="6" },
                    new SelectListItem() { Text="7", Value="7" },
                    new SelectListItem() { Text="8", Value="8" },
                    new SelectListItem() { Text="9", Value="9" },
                    new SelectListItem() { Text="10", Value="10" },
                    new SelectListItem() { Text="11", Value="11" },
                    new SelectListItem() { Text="12", Value="12" }
                }, "対象月", new { htmlAttributes = new { @class = "form-control" } })
        </div>

        @* 検索ボタン *@
        <div class="form-group" style="margin-left:30px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="cmd" value="検索" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@* エラーメッセージ *@
<div style="color: red">@Html.Raw(ViewBag.ErrorMessage)</div>
@* 完了メッセージ *@
<div style="color: green">@Html.Raw(ViewBag.CompMessage)</div>

<hr />

@using (Html.BeginForm("List", "Calendar", FormMethod.Post, new { name = "form1", id = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    Html.EnableClientValidation(false);

    <div style="margin-left:5px; height:50px; align-content:center">
        @{
            if (Model.CalendarList.Count() == 0)
            {
                <input type="submit" name="cmd" value="@AppConstant.CMD_UPDATE" class="btn btn-default" disabled="disabled" />
            }
            else
            {
                <input type="submit" name="cmd" value="@AppConstant.CMD_UPDATE" class="btn btn-default" />
            }
        }
    </div>

    @* 一覧のsubmitにてインデックスを設定 *@
    @Html.Hidden("index", "")
    @* 対象年と月をhiddenで保持 *@
    @Html.HiddenFor(model => Model.Year)
    @Html.HiddenFor(model => Model.Month)

    <div style="overflow-y: auto; width:720px; height:500px;">
        <table class="table" style="width:700px;">
            <tr>
                <th>
                    @* 入校予定日 *@
                    @Html.DisplayNameFor(model => Model.CalendarList.FirstOrDefault().EntrancePlanDate)
                </th>
                <th>
                    @* 教習コース *@
                    @Html.DisplayNameFor(model => Model.CalendarList.FirstOrDefault().TrainingCourseCd)
                </th>
                <th>
                    @* 仮免予定日 *@
                    @Html.DisplayNameFor(model => Model.CalendarList.FirstOrDefault().TmpLicencePlanDate)
                </th>
                <th>
                    @* 卒業予定日 *@
                    @Html.DisplayNameFor(model => Model.CalendarList.FirstOrDefault().GraduatePlanDate)
                </th>
                <th></th>
            </tr>

            @for (int i = 0; i < Model.CalendarList.Count(); i++)
            {
                // 削除フラグがtrueの場合、行にhiddenを設定
                string hidden = Model.CalendarList[i].DeleteFlg ? "hidden=hidden" : "";
                <tr @hidden>
                    <td>
                        @* 入校予定日 *@
                        @Html.DisplayFor(modelItem => Model.CalendarList[i].EntrancePlanDate)
                        @Html.HiddenFor(modelitem => Model.CalendarList[i].EntrancePlanDate)
                    </td>
                    <td>
                        @* 教習コース *@
                        @Html.DisplayFor(modelitem => Model.CalendarList[i].TrainingCourse.TrainingCourseName)
                        @Html.HiddenFor(modelitem => Model.CalendarList[i].TrainingCourseCd)
                    </td>
                    <td>
                        @* 仮免予定日 *@
                        @Html.EditorFor(modelitem => Model.CalendarList[i].TmpLicencePlanDate, new { htmlAttributes = new { @class = "form-control", @style = "width:150px;" } })
                    </td>
                    <td>
                        @* 卒業予定日 *@
                        @Html.EditorFor(modelitem => Model.CalendarList[i].GraduatePlanDate, new { htmlAttributes = new { @class = "form-control", @style = "width:150px;" } })
                    </td>
                    <td>
                        @* 削除ボタン *@
                        <input type="submit" name="cmd" value="@AppConstant.CMD_REMOVE" class="btn btn-default" onclick="reflect('@i')" style="font-size: 12px" />
                        @Html.HiddenFor(modelitem => Model.CalendarList[i].DeleteFlg)
                    </td>
                </tr>
            }

        </table>
    </div>
}

<script type="text/javascript">
    function reflect(index) {
        document.form1.index.value = index;
    }
</script>

